{"version":3,"sources":["components/Header.jsx","components/InputArea.jsx","images/RyanGoslingGQ.jpg","components/PopUpMessage.jsx","components/App.jsx","index.js"],"names":["Heading","id","Inputs","props","inputRef","useRef","useEffect","current","focus","useState","yourName","loveName","names","setNames","inputNames","event","target","name","value","prevName","isMouseOn","setIsMouseOn","className","ref","onChange","type","placeholder","autoComplete","onMouseEnter","onMouseLeave","style","boxShadow","onClick","onSubmit","preventDefault","buttonText","PopUpMessage","paperStyle","gosImage","src","Gosling","alt","messageStyle","loveMessage","App","message","setMessage","buttonMessage","setButtonMessage","messageClass","setMessageClass","paperClass","setPaperClass","isGosling","setIsGosling","yourInputName","toLowerCase","loveInputName","yourFName","trim","split","loveFName","lovePercent","map","letter","charCodeAt","reduce","acc","curr","length","substring","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c67cc70f.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Heading() {\n  return (\n    <div id=\"heading\">\n      <h1 id=\"headText\">Love Tester</h1>\n    </div>\n  \n)\n}\n\nexport default Heading;","import React, { useState, useRef, useEffect} from \"react\";\n\nfunction Inputs(props){\n  \n// #region for initial focus\n  const inputRef = useRef();\n\n  useEffect(() =>{\n    inputRef.current.focus();\n  },[]);\n//#end region\n\n// #region storing input values\n  const [names, setNames] = useState({\n    yourName: \"\",\n    loveName: \"\"\n  });\n\n  function inputNames(event){\n    const {name, value} = event.target;\n    setNames(prevName => {\n      return {...prevName, [name] : value}\n    })\n  };\n// #end region\n\n// #region mouseover button\n  const [isMouseOn, setIsMouseOn] = useState(false);\n  \n  function inButton(){\n    setIsMouseOn(true);\n  };\n  function outButton(){\n    setIsMouseOn(false);\n  };\n// #endregion\n\n  return(\n    <div className=\"inputArea\">\n      <form className=\"form\" >\n        <input \n          ref={inputRef}\n          onChange={inputNames}\n          id=\"userName\" \n          name=\"yourName\"\n          value={names.yourName}\n          type=\"text\" \n          placeholder=\"Your Name\" \n          autoComplete=\"off\"/>\n        <input \n          onChange={inputNames}\n          id=\"loveName\" \n          name=\"loveName\"\n          value={names.loveName}\n          type=\"text\" \n          placeholder=\"Love's Name\" \n          autoComplete=\"off\"/>\n        <button className = \"shadowButton\"\n          onMouseEnter={inButton}\n          onMouseLeave={outButton}\n          style={{boxShadow: isMouseOn ? \"-0.5px 0.5px 1.5px grey\" : \"-1px 1px 3px grey\"}}\n          onClick={(event) => {\n            props.onSubmit(names);\n            event.preventDefault();\n            setNames({\n              yourName:\"\",\n              loveName:\"\"\n            });\n          }}\n          id=\"submit\"\n        >{props.buttonText}\n        </button>\n      </form>\n    </div>  \n  )\n}\n\nexport default Inputs ;","export default __webpack_public_path__ + \"static/media/RyanGoslingGQ.3f8f375e.jpg\";","import React from \"react\";\nimport Gosling from \"../images/RyanGoslingGQ.jpg\";\n\nfunction PopUpMessage(props){ //send className as a prop\n    return(\n        <div className={props.paperStyle}>\n            {props.gosImage ? <img className=\"gosPic\" src={Gosling} alt=\"Ryan Gosling\"/> : null}\n            <h3 className={props.messageStyle} >{props.loveMessage}</h3>\n        </div>\n    )\n}\n\nexport default PopUpMessage;","import React, {useState} from \"react\";\nimport Heading from \"./Header\";\nimport Inputs from \"./InputArea\";\nimport PopUpMessage from \"./PopUpMessage\";\n\nfunction App(){\n\n    const [message, setMessage] = useState([\"Put your love to the test\"]);\n    const [buttonMessage, setButtonMessage] = useState(\"Test\");\n    const [messageClass, setMessageClass] = useState(\"message\");\n    const [paperClass, setPaperClass] = useState(\"messagePaper\");\n    const [isGosling, setIsGosling] = useState(false);\n\n    function calcNames(names){\n\n        const yourInputName = (names.yourName).toLowerCase();\n        const loveInputName = (names.loveName).toLowerCase();\n        const yourFName = yourInputName.trim().split(\" \")[0];\n        const loveFName = loveInputName.trim().split(\" \")[0];\n\n        setMessageClass(\"message\");\n        setPaperClass(\"messagePaper\");\n        setIsGosling(false);\n\n        if(yourInputName === \"\" || loveInputName === \"\"){\n            setMessage(\"Test your love in the fields below!\");\n        }\n        else if(yourInputName !== \"\" && loveInputName === \"ryan gosling\"){\n            setMessage(\"Hey girl,\\nI don't need an algorithm to know we're meant to be.\")\n            setMessageClass(\"gosMessage\");\n            setPaperClass(\"gosling\");\n            setIsGosling(true);\n        }else{\n            const lovePercent = (yourFName + loveFName)\n            .split(\"\")\n            .map(letter => letter.charCodeAt())\n            .reduce((acc, curr) => acc + curr) % 100;\n\n            if (loveFName.length > 20){\n                setMessage(\"You and \" + loveFName.substring(0,20) + \"...\" \n                + \" are \" + lovePercent + \"% compatible!\");\n            }else{\n                setMessage(\"You and \" + loveFName + \" are \" + lovePercent + \"% compatible!\");\n            }\n\n            // let loveName = loveFName;\n            // if(loveFName.length > 5){\n            //     let loveName = loveFName.substring(0,5) + \"...\";\n            // }else{\n            //     let loveName = loveFName;\n            // }\n            // setMessage(\"You and \" + loveName + \" are \" + lovePercent + \"% compatible!\");\n           \n            setButtonMessage(\"Try Again?\");\n        }\n      }\n    return( \n        <div id=\"grid\">\n            <Heading />\n            <PopUpMessage \n                loveMessage={message}\n                paperStyle={paperClass}\n                messageStyle={messageClass}\n                gosImage={isGosling}\n            />\n            <Inputs \n                onSubmit={calcNames}\n                buttonText={buttonMessage}\n            />\n        </div>\n    ) \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}